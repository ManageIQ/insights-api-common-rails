    <%= klass_name %>Type = ::GraphQL::ObjectType.define do
      name "<%= klass_name %>"
      description "A <%= klass_name %>"
<% if model_is_associated %>

      implements ::GraphQL::Relay::Node.interface
<% end %>

<% for property in model_properties %>
<%   property_name, property_type, property_description = property %>
<%   if property_description.nil? %>
      field :<%= property_name %>, <%=property_type%>
<%   else %>
      field :<%= property_name %>, <%= property_type %>, "<%= property_description %>"
<%   end %>
<% end %>
<% if model_associations.present? %>
<%   model_associations.each do |association| %>
<%     connection = "#{association.pluralize}" %>
<%     connection_type   = "#{association.camelize.singularize}Type.connection_type" %>
      connection :<%= connection %>, <%= connection_type %>, "The <%= connection %> associated with this <%= klass_name %>Type" do
        preload :<%= association %>
      end
<%   end %>
<% end %>
    end

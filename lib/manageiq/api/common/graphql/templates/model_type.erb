<%= klass_name %>Type = ::GraphQL::ObjectType.define do
  name "<%= klass_name %>"
  description "A <%= klass_name %>"
<% if model_is_associated %>

  implements ::GraphQL::Relay::Node.interface
<% end %>

<% model_properties.each do |property| %>
<%   property_name, property_type, property_description = property %>
<%   field_description = property_description.nil? ? "" : ", \"#{property_description}\"" %>
<%   field_resolver = "" %>
<%   if field_resolvers[property_name].present? %>
<%     field_resolver = "do\n    resolve ->(obj, args, ctx) #{field_resolvers[property_name].strip}\n  end"%>
<%   end%>
  field :<%= property_name %>, <%=property_type%> <%=field_description%> <%=field_resolver%>
<% end %>
<% if model_associations.present? %>
<%   model_associations.each do |association| %>
<%     connection = "#{association.pluralize}" %>
<%     connection_type   = "#{association.camelize.singularize}Type.connection_type" %>
  connection :<%= connection %>, <%= connection_type %>, "The <%= connection %> associated with this <%= klass_name %>Type" do
    preload :<%= association %>
  end
<%   end %>
<% end %>
end
